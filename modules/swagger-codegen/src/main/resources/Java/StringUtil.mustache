{{>licenseInfo}}

package {{invokerPackage}};

{{#java8}}
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
{{/java8}}

{{>generatedAnnotation}}
public class StringUtil {
    /**
     * Check if the given array contains the given value (with case-insensitive comparison).
     *
     * @param array The array
     * @param value The value to search
     * @return true if the array contains the value
     */
    public static boolean containsIgnoreCase(String[] array, String value) {
        {{#java8}}
        return Arrays
                .stream(array)
                .anyMatch(str -> (value == null && str == null) || (value != null && value.equalsIgnoreCase(str)));
        {{/java8}}
        {{^java8}}
        for (String str : array) {
            if ((value == null && str == null) || (value != null && value.equalsIgnoreCase(str))) {
                return true;
            }
        }
        return false;
        {{/java8}}
    }

    /**
     * Join an array of strings with the given separator.
     * <p>
     * Note: This might be replaced by utility method from commons-lang or guava someday
     * if one of those libraries is added as dependency.
     * </p>
     *
     * @param array     The array of strings
     * @param separator The separator
     * @return the resulting string
     */
    public static String join(String[] array, String separator) {
        int len = array.length;
        if (len == 0) {
            return "";
        }

        {{#java8}}
        return IntStream
                .range(1, len)
                .mapToObj(i -> separator + array[i])
                .collect(Collectors.joining("", array[0], ""));
        {{/java8}}
        {{^java8}}
        StringBuilder out = new StringBuilder();
        out.append(array[0]);
        for (int i = 1; i < len; i++) {
            out.append(separator).append(array[i]);
        }
        return out.toString();
        {{/java8}}
    }
}
